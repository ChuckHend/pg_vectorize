name: Build Postgres with pg_vectorize

defaults:
  run:
    shell: bash

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - docs/**
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - docs/**

  release:
    types:
      - created
jobs:
  build_and_push_amd64:
    name: Build and push AMD64 images
    runs-on:
      - self-hosted
      - dind
      - xlarge-16x16
    outputs:
      short_sha: ${{ steps.versions.outputs.SHORT_SHA }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install stoml and pg-trunk
        shell: bash
        run: |
          set -xe
          wget https://github.com/freshautomations/stoml/releases/download/v0.7.1/stoml_linux_amd64 &> /dev/null
          mv stoml_linux_amd64 stoml
          chmod +x stoml
          sudo mv stoml /usr/local/bin/
      - name: Set version strings
        id: versions
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "TAG_VER=$(/usr/local/bin/stoml Cargo.toml package.version)" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io/tembo
          username: ${{ secrets.QUAY_USER_TEMBO }}
          password: ${{ secrets.QUAY_PASSWORD_TEMBO }}
      - name: Build and push -- Commit
        # push commit build when not a release
        if: github.event_name != 'release'
        run: |
            docker buildx build \
                --file ./images/vectorize-pg/Dockerfile \
                --platform linux/amd64 \
                --tag quay.io/tembo/vectorize-pg:${{ steps.versions.outputs.SHORT_SHA }}-amd64 \
                --push .

      - name: Build and push
        if: github.event_name == 'release'
        uses: docker/build-push-action@v5
        with:
          file: ./images/vectorize-pg/Dockerfile
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            quay.io/tembo/vectorize-pg:v${{ steps.versions.outputs.TAG_VER }}-amd64
            quay.io/tembo/vectorize-pg:latest-amd64

  build_and_push_arm64:
    name: Build and push ARM64 images
    runs-on:
      - self-hosted
      - dind
      - arm64
    outputs:
      short_sha: ${{ steps.versions.outputs.SHORT_SHA }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install stoml and pg-trunk
        shell: bash
        run: |
          set -xe
          wget https://github.com/freshautomations/stoml/releases/download/v0.7.1/stoml_linux_amd64 &> /dev/null
          mv stoml_linux_amd64 stoml
          chmod +x stoml
          sudo mv stoml /usr/local/bin/
      - name: Set version strings
        id: versions
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "TAG_VER=$(/usr/local/bin/stoml Cargo.toml package.version)" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io/tembo
          username: ${{ secrets.QUAY_USER_TEMBO }}
          password: ${{ secrets.QUAY_PASSWORD_TEMBO }}

      - name: Build and push -- Commit
        # push commit build when not a release
        if: github.event_name != 'release'
        run: |
            docker buildx build \
                --file ./images/vectorize-pg/Dockerfile \
                --platform linux/arm64 \
                --tag quay.io/tembo/vectorize-pg:${{ steps.versions.outputs.SHORT_SHA }}-arm64 \
                --push .

      - name: Build and push
        if: github.event_name == 'release'
        uses: docker/build-push-action@v5
        with:
          file: ./images/vectorize-pg/Dockerfile
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            quay.io/tembo/vectorize-pg:v${{ steps.versions.outputs.TAG_VER }}-arm64
            quay.io/tembo/vectorize-pg:latest-arm64

  create_manifest:
    name: Create and Push Manifest
    # only create manifest on releases (latest and semver tagged images)
    # if: github.event_name == 'release'

    runs-on: ubuntu-latest
    needs: [build_and_push_arm64, build_and_push_amd64]
    outputs:
      short_sha: ${{ steps.versions.outputs.SHORT_SHA }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io/tembo
          username: ${{ secrets.QUAY_USER_TEMBO }}
          password: ${{ secrets.QUAY_PASSWORD_TEMBO }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install stoml and pg-trunk
        shell: bash
        run: |
          set -xe
          wget https://github.com/freshautomations/stoml/releases/download/v0.7.1/stoml_linux_amd64 &> /dev/null
          mv stoml_linux_amd64 stoml
          chmod +x stoml
          sudo mv stoml /usr/local/bin/
      - name: Set version strings
        id: versions
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "TAG_VER=$(/usr/local/bin/stoml Cargo.toml package.version)" >> $GITHUB_OUTPUT

      - name: Create and push Docker manifest
        run: |
          docker manifest create quay.io/tembo/vectorize-pg:${{ steps.versions.outputs.SHORT_SHA }} \
            --amend quay.io/tembo/vectorize-pg:${{ steps.versions.outputs.SHORT_SHA }}-arm64 \
            --amend quay.io/tembo/vectorize-pg:${{ steps.versions.outputs.SHORT_SHA }}-amd64

          docker manifest push quay.io/tembo/vectorize-pg:${{ steps.versions.outputs.SHORT_SHA }}